name: Continuous Integration

on:
  pull_request:
    branches:
      - main
  push:
    branches:
      - main

permissions:
  contents: read

jobs:
  test-typescript:
    name: TypeScript Tests
    runs-on: ubuntu-latest
    timeout-minutes: 10
    permissions:
      contents: read
    steps:
      - name: Checkout
        id: checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        id: setup-node
        uses: actions/setup-node@v4
        with:
          node-version-file: .node-version
          cache: npm

      - name: Install Dependencies
        id: npm-ci
        run: npm ci

      - name: Check Format
        id: npm-format-check
        run: npm run format:check

      - name: Lint
        id: npm-lint
        run: npm run lint

      - name: Test
        id: npm-ci-test
        run: npm run ci-test

  test-action:
    name: GitHub Actions Test
    runs-on: ubuntu-latest
    timeout-minutes: 10
    if: github.event_name == 'pull_request'
    permissions:
      contents: read
      pull-requests: write
      actions: write
    steps:
      - name: Checkout
        id: checkout
        uses: actions/checkout@v4

      - name: Fail to create comment
        id: error
        continue-on-error: true
        uses: ./
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          directories: |
            .github/testdata/go/does-not-exist
            .github/testdata/go/app1
            .github/testdata/go/app2
            .github/testdata/go/app3
          test-report-xml: 'test.xml'
          lint-report-xml: 'lint.xml'
          pull-request-number: ${{ github.event.pull_request.number }}
          sha: ${{ github.event.pull_request.head.sha }}

      - name: The previous step should fail
        id: check-error
        env:
          outcome: ${{ steps.error.outcome }}
        run: |
          if [ "${outcome}" == "success" ]; then
            echo "Test should have failed"
            exit 1
          fi

      - name: Create Comment
        id: create
        uses: ./
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          directories: |
            .github/testdata/go/app1
            .github/testdata/go/app2
            .github/testdata/go/app3
          test-report-xml: 'test.xml'
          lint-report-xml: 'lint.xml'
          pull-request-number: ${{ github.event.pull_request.number }}
          sha: ${{ github.event.pull_request.head.sha }}

      - name: Update Comment
        id: update
        uses: ./
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          directories: |
            .github/testdata/go/app1
            .github/testdata/go/app2
            .github/testdata/go/app3
          test-report-xml: 'test.xml'
          lint-report-xml: 'lint.xml'
          pull-request-number: ${{ github.event.pull_request.number }}
          sha: ${{ github.event.pull_request.head.sha }}

      - name: Print Output
        id: output
        run: |
          echo "${{ steps.create.outputs.body }}"
          echo "${{ steps.update.outputs.body }}"
